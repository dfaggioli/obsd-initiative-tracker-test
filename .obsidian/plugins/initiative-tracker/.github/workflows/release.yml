name: Build obsidian plugin

on:
    push:
        # Sequence of patterns matched against refs/tags
        tags:
            - "*" # Push events to matching any tag format, i.e. 1.0, 20.15.10

env:
    PLUGIN_NAME: obsidian-initiative-tracker # Change this to the name of your plugin-id folder

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.build.outputs.version }}
        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: "18.x" # You might need to adjust this value to your own version
            - name: Build
              id: build
              run: |
                  npm install
                  npm run build --if-present
                  mkdir ${{ env.PLUGIN_NAME }}
                  cp main.js manifest.json styles.css ${{ env.PLUGIN_NAME }}
                  zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
                  ls
                  npx rexreplace "^.*?#(#+\s\[.*?\n.*?)(?=\s*#+\s\[)" "_" -s -M -G -m -o "CHANGELOG.md" > release_notes.md
                  echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"

                  VERSION=$(grep 'version' package.json | cut -d'"' -f4)
                  echo $VERSION
                  echo "::set-output name=version::${VERSION}"
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  VERSION: ${{ github.ref }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: ${{ github.ref }}
                  draft: false
                  body_path: release_notes.md
                  prerelease: false
            - name: Upload zip file
              id: upload-zip
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./${{ env.PLUGIN_NAME }}.zip
                  asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.build.outputs.tag_name }}.zip
                  asset_content_type: application/zip
            - name: Upload main.js
              id: upload-main
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./main.js
                  asset_name: main.js
                  asset_content_type: text/javascript
            - name: Upload manifest.json
              id: upload-manifest
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./manifest.json
                  asset_name: manifest.json
                  asset_content_type: application/json
            - name: Upload styles.css
              id: upload-css
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./styles.css
                  asset_name: styles.css
                  asset_content_type: text/css
    brat:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  ref: master
            - env:
                  VERSION: ${{needs.build.outputs.version}}
              run: |
                  echo $VERSION
                  mversion=$(grep 'version' manifest-beta.json | cut -d'"' -f4)
                  echo $mversion
                  if [ "$VERSION" != "$mversion" ]; then
                    sed -i 's|\(version":\) "[0-9\.]*"|\1 "'$VERSION'"|' manifest-beta.json
                    git config user.name github-actions
                    git config user.email github-actions@github.com
                    git add .
                    git commit -m "ðŸ”¨ brat release $VERSION"
                    git push
                  fi
